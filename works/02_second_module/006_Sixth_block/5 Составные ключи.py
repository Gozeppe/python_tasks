# –ó–∞–¥–∞—á–∞ 1. –ü–∞—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
# –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –ø–∞—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ª—é–¥–µ–π. –•—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é —Å–ª–æ–≤–∞—Ä—è, 
# —Å–æ—Å—Ç–æ—è—â–µ–≥–æ –∏–∑ –ø–∞—Ä ¬´–°–µ—Ä–∏—è –∏ –Ω–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞ ‚Äî —Ñ–∞–º–∏–ª–∏—è –∏ –∏–º—è¬ª. –°–µ—Ä–∏—è –∏ –Ω–æ–º–µ—Ä ‚Äî —Å–æ—Å—Ç–∞–≤–Ω–æ–π –∫–ª—é—á, –∞ —Ñ–∞–º–∏–ª–∏—è –∏ –∏–º—è ‚Äî —Å–æ—Å—Ç–∞–≤–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.

data = {

     (5000, 123456): ('–ò–≤–∞–Ω–æ–≤', '–í–∞—Å–∏–ª–∏–π'),

     (6000, 111111): ('–ò–≤–∞–Ω–æ–≤', '–ü–µ—Ç—Ä'),

     (7000, 222222): ('–ú–µ–¥–≤–µ–¥–µ–≤', '–ê–ª–µ–∫—Å–µ–π'),

     (8000, 333333): ('–ê–ª–µ–∫—Å–µ–µ–≤', '–ì–µ–æ—Ä–≥–∏–π'),

     (9000, 444444): ('–ì–µ–æ—Ä–≥–∏–µ–≤–∞', '–ú–∞—Ä–∏—è')

}
user_find = input('–í–í–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏ —Å–µ—Ä–∏—é —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: ').split(' ')
user_series = int(user_find[0])
user_num = int(user_find[1])
    
for (series, number), (surname, name) in data.items():
    
    if user_series == series and user_num == number:
        print(name, surname)

# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ –Ω–æ–º–µ—Ä—É –∏ —Å–µ—Ä–∏–∏ –ø–∞—Å–ø–æ—Ä—Ç–∞ –≤—ã–¥–∞—ë—Ç –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é —á–µ–ª–æ–≤–µ–∫–∞.

# –ó–∞–¥–∞—á–∞ 2. –ö–æ–Ω—Ç–∞–∫—Ç—ã 2
# –ú—ã —É–∂–µ —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—É—é –∫–Ω–∏–≥—É –¥–ª—è –°—Ç–µ–ø–∞–Ω–∞, –æ–¥–Ω–∞–∫–æ –µ—ë –ø—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ –≤ —Ç–æ–º, —á—Ç–æ —Ç—É–¥–∞ –Ω–µ–ª—å–∑—è –±—ã–ª–æ –¥–æ–±–∞–≤–∏—Ç—å –ª—é–¥–µ–π —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –∏–º–µ–Ω–∞–º–∏. 
# –ù–∞–¥–æ —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å.

# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–º—è –∫–æ–Ω—Ç–∞–∫—Ç–∞, —Ñ–∞–º–∏–ª–∏—é –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, 
# –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö –≤ —Å–ª–æ–≤–∞—Ä—å –∏ –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω —Ç–µ–∫—É—â–∏–π —Å–ª–æ–≤–∞—Ä—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤. 
# –°–ª–æ–≤–∞—Ä—å —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –ø–∞—Ä ¬´–§. –ò. ‚Äî —Ç–µ–ª–µ—Ñ–æ–Ω¬ª, –≥–¥–µ –§. –ò. ‚Äî —ç—Ç–æ —Å–æ—Å—Ç–∞–≤–Ω–æ–π –∫–ª—é—á. 
# –ó–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–¥—ë—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ (–Ω–æ –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å —Å–≤–æ—ë —É—Å–ª–æ–≤–∏–µ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã). 
# –û–±–µ—Å–ø–µ—á—å—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å –≤–≤–æ–¥–∞: –µ—Å–ª–∏ —ç—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —É–∂–µ –µ—Å—Ç—å –≤ —Å–ª–æ–≤–∞—Ä–µ, —Ç–æ –≤—ã–≤–µ–¥–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.



# contacts = {}

# while True:
#     if not contacts:
#         print("<–ü—É—Å—Ç–æ>")
#     else:
#         for name, phone in contacts.items():
#             print(name, phone)

#     name, phone = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ –Ω–æ–º–µ—Ä —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: ").split()

#     if name.lower() == "–≤—ã—Ö–æ–¥":
#         break

#     if name in contacts:
#         print("–û—à–∏–±–∫–∞: —Ç–∞–∫–æ–µ –∏–º—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
#     else:
#         contacts[name] = phone
    
contacts = {}
while True:
     
   data = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ —Ç–µ–ª–µ—Ñ–æ–Ω —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: ").split()
   
   if data[0].lower() == "–≤—ã—Ö–æ–¥":
    break
   

   if len(data) != 3:
    print("–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ 3 –∑–Ω–∞—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.")
    continue

   name, surname, phone = data

   key = (name, surname)

   if key not in contacts:
    contacts[key] = phone
    
    print("\nüìí –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:")
    for (n, s), p in contacts.items():
        print(f"{n} {s} - {p}")
   else:
    print("–£–∂–µ –µ—Å—Ç—å")