# 1. –°–ø–∏—Å–∫–∏ (list)
# –ß—Ç–æ —ç—Ç–æ: –∏–∑–º–µ–Ω—è–µ–º–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

# –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã: append, remove, insert, pop, index, —Å—Ä–µ–∑—ã ([:]), in.

# –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:
# –°–æ–∑–¥–∞–π —Å–ø–∏—Å–æ–∫ –∏–∑ 5 –ª—é–±—ã—Ö —á–∏—Å–µ–ª. –î–æ–±–∞–≤—å –≤ –∫–æ–Ω–µ—Ü –µ—â—ë –æ–¥–Ω–æ —á–∏—Å–ª–æ.

# –£–¥–∞–ª–∏ –≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç. –ó–∞–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –Ω–∞ —Å—Ç—Ä–æ–∫—É '–∫–æ–Ω–µ—Ü'.

# –í—ã–≤–µ–¥–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ.

import random

rand_list = [random.randint(0, 50) for _ in range(5)]
print(rand_list)

1.
rand_list.append(random.randint(0, 50))
print(rand_list)
2.
rand_list.pop(1)
rand_list[-1::] = ['–∫–æ–Ω–µ—Ü']
print(rand_list)
3
rand_slices = rand_list[1:4]
print(rand_slices)
3.

#  2. –ö–æ—Ä—Ç–µ–∂–∏ (tuple)
# –ß—Ç–æ —ç—Ç–æ: –Ω–µ–∏–∑–º–µ–Ω—è–µ–º–∞—è –≤–µ—Ä—Å–∏—è —Å–ø–∏—Å–∫–∞.

# –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: —á–∞—â–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è "—Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö", –Ω–∞–ø—Ä–∏–º–µ—Ä –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏–ª–∏ (–∏–º—è, –≤–æ–∑—Ä–∞—Å—Ç).

# –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:
# –°–æ–∑–¥–∞–π –∫–æ—Ä—Ç–µ–∂ —Å —Ç—Ä–µ–º—è —Å—Ç—Ä–æ–∫–∞–º–∏.

# –†–∞—Å–ø–∞–∫—É–π –∫–æ—Ä—Ç–µ–∂ –≤ —Ç—Ä–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.

# –ü—Ä–µ–≤—Ä–∞—Ç–∏ –∫–æ—Ä—Ç–µ–∂ –≤ —Å–ø–∏—Å–æ–∫, –¥–æ–±–∞–≤—å —Ç—É–¥–∞ –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç, —Å–Ω–æ–≤–∞ –ø—Ä–µ–≤—Ä–∞—Ç–∏ –≤ –∫–æ—Ä—Ç–µ–∂.


words = ['—Ö—É–π', '–ø–∏–∑–¥–∞', '–¥–∂–∏–≥—É—Ä–¥–∞', '—Å–µ–ø—É–ª—å–∫–∞', '–∞–¥', '–Ω–æ–∑–∏—É–º', '–ò—Å–∏–¥–∞', '–ü–∏—Å–∏–¥–∞']

random_words = random.sample(words, 3)  # –ë–µ—Ä—ë–º 3 —Ä–∞–∑–Ω—ã—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–ª–æ–≤–∞

words_tup = tuple(random_words)

print(words_tup)

a, b, c = words_tup
print(a, b, c)

my_lst = list(words_tup)

my_lst.append(random.choice(words))
print(my_lst)   

new_tup = tuple(my_lst)
print(new_tup)



# üîπ 3. –°–ª–æ–≤–∞—Ä–∏ (dict)
# –ß—Ç–æ —ç—Ç–æ: –∫–æ–ª–ª–µ–∫—Ü–∏—è –ø–∞—Ä –∫–ª—é—á: –∑–Ω–∞—á–µ–Ω–∏–µ.

# –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã: .get(), .items(), .keys(), .values(), in, –¥–æ—Å—Ç—É–ø –ø–æ dict['–∫–ª—é—á'].

# –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:
# –°–æ–∑–¥–∞–π —Å–ª–æ–≤–∞—Ä—å —Å –∏–º–µ–Ω–∞–º–∏ –∏ –≤–æ–∑—Ä–∞—Å—Ç–∞–º–∏.

# –î–æ–±–∞–≤—å –µ—â—ë –æ–¥–Ω—É –ø–∞—Ä—É.

# –£–¥–∞–ª–∏ –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞.

# –ü–æ–ª—É—á–∏ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–º—ë–Ω (–∫–ª—é—á–µ–π).

# –ü–æ–ª—É—á–∏ —Å—Ä–µ–¥–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç.
1.

dic_people = {
    '–ò–≥–æ—Ä—å': '30',
    '–ú–∞—à–∞': '40',
    '–®–ø–∏–≥–æ—Ä—å': '99',
    '–•—É—è—à–∞': '666'
}
2.
dic_people.update({'–ê—Ä–∫–∞–¥–∏–π': '120',
                    '–ú–∞–¥–∏–π' : '300'})
print(dic_people)
3.
del dic_people['–•—É—è—à–∞']
print(dic_people)
4.
find_key = dic_people.keys()
print(find_key)
5.

sum_age = 0
for age in dic_people.values():
    sum_age += int(age)

lenght_dic = len(dic_people)
med_age = sum_age / lenght_dic

print(med_age)




# üîπ 4. –ú–Ω–æ–∂–µ—Å—Ç–≤–∞ (set)
# –ß—Ç–æ —ç—Ç–æ: –Ω–µ—É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

# –û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: .add(), .remove(), in, set(), –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ (|), –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ (&), —Ä–∞–∑–Ω–æ—Å—Ç—å (-).

# –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:
# –ü—Ä–µ–≤—Ä–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —Å –¥—É–±–ª–∏–∫–∞—Ç–∞–º–∏ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ.

# –£–¥–∞–ª–∏ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç.

# –ü—Ä–æ–≤–µ—Ä—å, –µ—Å—Ç—å –ª–∏ '–∫–æ—Ç' –≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ.

# –û–±—ä–µ–¥–∏–Ω–∏ –¥–≤–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–∞.

import random
unique_part = [random.randint(1, 10) for _ in range(5)]
duplicates = [random.choice(unique_part) for _ in range(3)]
combined = unique_part + duplicates

random.shuffle(combined)
combuned = set(combined)
print(combuned)

# –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:
# –ü—Ä–µ–≤—Ä–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —Å –¥—É–±–ª–∏–∫–∞—Ç–∞–º–∏ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ.

# –£–¥–∞–ª–∏ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç.

# –ü—Ä–æ–≤–µ—Ä—å, –µ—Å—Ç—å –ª–∏ '–∫–æ—Ç' –≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ.

# –û–±—ä–µ–¥–∏–Ω–∏ –¥–≤–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–∞.
1.
new_st = set(combuned)
print(new_st)
2.
random_element = random.choice(list(new_st))

# –£–¥–∞–ª—è–µ–º —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç
new_st.remove(random_element)
print(new_st)
3. 
print('cat' in new_st)
4.
unique_part_2 = [random.randint(1, 10) for _ in range(5)]
duplicates_2 = [random.choice(unique_part_2) for _ in range(3)]
combined_2 = unique_part_2 + duplicates_2
random.shuffle(combined_2)
combuned_2 = set(combined_2)
print(combuned_2)

combuned_3 = combuned_2.union(combuned)
print(combuned_3)