
# ‚ö†Ô∏è –ë–ª–æ–∫ 3: Try / Except / Raise
# üß© 7. –î–µ–ª–µ–Ω–∏–µ
# –§—É–Ω–∫—Ü–∏—è divide(a, b) –¥–µ–ª–∏—Ç a –Ω–∞ b.
# –ï—Å–ª–∏ b == 0 ‚Äî –≤—ã–≤–æ–¥–∏—Ç: "–û—à–∏–±–∫–∞: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å".

def divide(a, b):
    try:
     return a / b
    except ZeroDivisionError:
        print('–û—à–∏–±–∫–∞ –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å!')
        
print(divide(2, 3))
# üß© 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞
# –ó–∞–ø—Ä–æ—Å–∏ –≤–≤–æ–¥ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
# –ï—Å–ª–∏ –æ–Ω –≤–≤—ë–ª –Ω–µ —á–∏—Å–ª–æ ‚Äî –≤—ã–≤–µ–¥–∏: "–≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ!".

try:
    user_input = int(input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: '))
except ValueError:
    print('–ß–∏—Å–ª–æ, –∞ –Ω–µ —Å–ª–æ–≤–æ, –Ω–∞—Ä–∫–æ–º–∞–Ω')

# üß© 9. –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞
# –ü–æ–ø—Ä–æ—Å–∏ –ø—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞.
# –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç ‚Äî –≤—ã–≤–µ–¥–∏: "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.", –Ω–µ –ø–∞–¥–∞–π.

try:
    user_path = input("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞: ")
    with open(user_path, "r", encoding="utf-8") as f:
        content = f.read()
        print("–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç!")
except FileNotFoundError:
    print("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
