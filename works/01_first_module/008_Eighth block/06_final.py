print('Задача 1. Тестовое задание')

# Степан пришёл устраиваться на работу, где ему дали тестовое задание:
# проанализировать такую таблицу,
# понять как она строится и написать программу для вывода её на экран.

# 0 2 4 6  8  10
# 1 3 5 7  9  11
# 2 4 6 8  10 12
# 3 5 7 9  11 13
# 4 6 8 10 12 14
# 5 7 9 11 13 15
# 
# Помогите Степану реализовать такую программу.
# Подсказка: номера столбцов. А ещё не забудьте про литерал \t для табуляции

for row in range(6):
    for col in range(6):  
        print(row + col * 2, end='\t')  
    print()  

print('Задача 2. Лестница')

# Пользователь вводит число N.
# Напишите программу, которая выводит такую “лесенку” из чисел:

# Введите число: 5
# 1
# 2 2
# 3 3 3
# 4 4 4 4
# 5 5 5 5 5

n = int(input("Введите число: "))

for i in range(1, n + 1):  
    for j in range(i):  
        print(i, end=' ')  
    print()  

print('Задача 3. Рамка')

# Напишите программу,
# которая рисует с помощью символьной графики прямоугольную рамку.
# Для вертикальных линий используйте символ вертикального штриха “|”,
# а для горизонтальных - дефис “-”. Пусть пользователь вводит ширину и высоту рамки.

#  _ _ _ _ _ _ _ _ _
# |                 |
# |                 |
# |                 |
# |                 |
# |                 |
# |                 |
# |_ _ _ _ _ _ _ _ _|

a = int(input('Введите высоту рамки: '))
b = int(input('Введите ширину арки: '))

for row in range(a + 1):
    for col in range(b + 1):
        if col == 0 or col == b:
            print('|', end=' ')
        elif row == 0 or row == a:
            print('-', end=' ')
        else:
            print(' ', end=' ')
    print()

print('Задача 4. Простые числа')

# Напишите программу, которая считает количество простых чисел в заданной последовательности и выводит ответ на экран.

# Простое число делится только на себя и на единицу. Последовательность задаётся при помощи вызова ввода (input) на каждой итерации цикла. 
# Одна итерация — одно число.

# Пример:
# Введите количество чисел: 6.
# Введите число: 4.
# Введите число: 7.
# Введите число: 20.
# Введите число: 3.
# Введите число: 11.
# Введите число: 37.

# Количество простых чисел в последовательности: 4.

# Запрашиваем количество чисел
seqNum = int(input('Сколько будет чисел: '))

# Инициализируем счетчик простых чисел
primeCount = 0

# Цикл для ввода каждого числа
for num in range(1, seqNum + 1):
    print('Введите', str(num) + '-e число:', end=' ')
    number = int(input())
    
    # Проверка на 0 и 1
    if number > 1:
        # Проверка на делимость
        is_prime = True  # Предполагаем, что число простое
        for divider in range(2, number):
            if number % divider == 0:
                is_prime = False  # Если нашли делитель, число не простое
                break
        if is_prime:
            primeCount += 1  # Увеличиваем счетчик простых чисел

# Выводим результат
print('Простых чисел в последовательности:', primeCount)

print('Задача 5. Наибольшая сумма цифр')

# Вводится N чисел. 
# Среди натуральных чисел, которые были введены, 
# найдите наибольшее по сумме цифр. Выведите на экран это число и сумму его цифр.

# Ввод количества чисел
n = int(input('Введите количество чисел: '))
max_sum = 0  # Переменная для хранения максимальной суммы цифр
max_number = 0  # Переменная для хранения числа с максимальной суммой цифр

# Ввод чисел
for _ in range(n):
    number = int(input('Введите число: '))
    
    sum_digits = 0  # Сумма цифр текущего числа
    
    # Цикл для подсчета суммы цифр
    temp_number = number
    while temp_number > 0:
        sum_digits += temp_number % 10  # Добавляем последнюю цифру к сумме
        temp_number //= 10  # Убираем последнюю цифру
    
    # Проверка, является ли текущая сумма цифр максимальной
    if sum_digits > max_sum:
        max_sum = sum_digits  # Обновляем максимальную сумму
        max_number = number  # Обновляем число с максимальной суммой

# Вывод результата
print(f'Число с наибольшей суммой цифр: {max_number}')
print(f'Сумма его цифр: {max_sum}')


print('Задача 6. Пирамидка')


# Напишите программу,
# которая выводит на экран равнобедренный треугольник (пирамидку),
# заполненный символами хэштега "#". Пусть высота пирамиды вводится пользователем.


   #
  ###
 #####
#######

# Ввод высоты пирамиды
height = int(input("Введите высоту пирамиды: "))

# Цикл для создания пирамиды
for i in range(height):
    # Вывод пробелов для выравнивания
    print(' ' * (height - i - 1), end='')
    # Вывод символов #
    print('#' * (2 * i + 1))

print('Задача 7. Пирамидка 2')


# Напишите программу,
# которая получает на вход количество уровней пирамиды и выводит их на экран,

# Пример:
# 
#             1
#          3     5
#       7     9     11
#    13    15    17    19
# 21    23    25    27    29

# Ввод количества уровней пирамиды
levels = int(input("Введите количество уровней пирамиды: "))

# Переменная для хранения текущего нечетного числа
current_odd_number = 1

# Цикл для создания уровней пирамиды
for i in range(levels):
    # Вывод пробелов для выравнивания
    print(' ' * (levels - i - 1) * 2, end='')  # Умножаем на 2 для большего отступа
    
    # Внутренний цикл для вывода нечетных чисел
    for j in range(i + 1):
        # Форматируем вывод, чтобы числа были выровнены
        print(f"{current_odd_number:2}", end='  ')  # Выводим число с шириной 2
        current_odd_number += 2  # Переход к следующему нечетному числу
    
    # Переход на новую строку
    print()


print('Задача 8. Яма ')

# Представьте, что вы разрабатываете компьютерную игру с текстовой графикой. Вам поручили создать генератор ландшафта. Напишите программу, которая получает на вход число N и выводит на экран числа в виде ямы:

# Напишите программу,
# которая получает на вход число N и выводит на экран числа в виде “ямы”:

# Введите число: 5
#
# 5........5
# 54......45
# 543....345
# 5432..2345
# 5432112345

n = int(input('Введите число: '))
print()
q = n - 1
while q >= 0:
    for i in range(-n, n + 1):
        if abs(i) > q:
            print(abs(i), end='')
        elif i == 0:
            print(end='')
        else:
            print('.', end='')
    q -= 1
    print()