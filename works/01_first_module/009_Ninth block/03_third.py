# Задача 1. Герон
# Существует, так называемая, формула Герона, позволяющая вычислить площадь треугольника, зная длины его сторон.

# S= √ (p * (p - a)*(p - b)*(p - c)) ,где

# S - площадь;
# p - полупериметр треугольника (a+b+c)/2;
# a,b,c - длины сторон треугольника.

# Напишите программу, которая принимает на вход длины сторон треугольника и выводит его площадь

import math

# Вводим длины сторон треугольника
a = float(input("Введите длину стороны a: "))
b = float(input("Введите длину стороны b: "))
c = float(input("Введите длину стороны c: "))

# Полупериметр
p = (a + b + c) / 2

# Формула Герона для площади
S = math.sqrt(p * (p - a) * (p - b) * (p - c))

# Вывод результата
print(f"Площадь треугольника: {S}")



# Задача 2. Игра
# Вам предстоит создать 2D-игру (вид сверху, игрок двигается в двух плоскостях).

# Начнём с управления персонажем: получаем от игрока пройденное расстояние и угол, 
# по которому двигался персонаж. Зная эту информацию, нужно изменить текущие координаты (0, 0) на новые (х, у).
#  Чтобы это сделать, требуется узнать, какое расстояние персонаж преодолеет по горизонтали (по оси Х, x = расстояние × косинус угла)
#  и по вертикали (по оси У, y = расстояние × синус угла).

# Напишите программу, которая получает на вход расстояние и угол поворота. Выведите координаты нового местоположения персонажа.

import math

# Вводим расстояние и угол
distance = float(input("Введите пройденное расстояние: "))
angle = float(input("Введите угол поворота (в градусах): "))

# Переводим угол из градусов в радианы, потому что math.sin и math.cos работают с радианами
angle_radians = math.radians(angle)

# Вычисляем координаты
x = distance * math.cos(angle_radians)
y = distance * math.sin(angle_radians)

# Выводим результат
print(f"Новые координаты персонажа: x = {x}, y = {y}")


# Задача 3. Мега-калькулятор
# Кеша учится в третьем классе, и уже умеет программировать на питоне. Как и многие его одноклассники, 
# он очень любит сразу применять все полученные знания на практике. Вчера Кеша узнал про модуль math и его основные возможности,
#  поэтому решил написать мега-калькулятор, который бы применял сразу все функции к введенному пользователем числу. 
# Чтобы ничего не забыть, он пользуется шпаргалкой, которую прикрепили к уроку

# Напишите программу, которая получает от пользователя вещественное число,
#  по очереди применяет к нему функции модуля Math и выводит результат:

# округляет вниз
# округляет вверх
# берет модуль числа
# извлекает квадратный корень
# возводит экспоненту в степень, равную числу
# считает натуральный логарифм числа
# считает логарифм числа по основанию 2
# считает логарифм числа по основанию 10
# считает синус и косинус числа
# И так как Кеша самый умный в классе, он решил попробовать посчитать факториал числа. Для этого ему пришлось придумать и реализовать контроль ввода: факториал вычисляется, только если введенное число было натуральным.

import math

# Ввод числа
num = float(input("Введите вещественное число: "))

# Применяем все функции из модуля math
print(f"Округление вниз: {math.floor(num)}")
print(f"Округление вверх: {math.ceil(num)}")
print(f"Модуль числа: {abs(num)}")

# Для квадратного корня проверяем, что число не отрицательное
if num >= 0:
    print(f"Квадратный корень: {math.sqrt(num)}")
else:
    print("Квадратный корень: нельзя извлечь из отрицательного числа")

print(f"Экспонента в степени числа: {math.exp(num)}")

# Логарифмы и контроль на положительное число
if num > 0:
    print(f"Натуральный логарифм: {math.log(num)}")
    print(f"Логарифм по основанию 2: {math.log2(num)}")
    print(f"Логарифм по основанию 10: {math.log10(num)}")
else:
    print("Логарифмы не могут быть вычислены для неположительных чисел")

# Синус и косинус
print(f"Синус числа: {math.sin(num)}")
print(f"Косинус числа: {math.cos(num)}")

# Факториал только для натуральных чисел
if num >= 0 and num.is_integer():
    print(f"Факториал: {math.factorial(int(num))}")
else:
    print("Факториал может быть вычислен только для натуральных чисел")
