print('Задача 1. Кубы чисел')

# В один из вечеров к Васе домой пришёл племянник и пожаловался на сложности с уроками математики: у него никак не получалось разобраться со степенями чисел. Вася решил помочь племяннику и написать программу, которая позволит наглядно увидеть возведение чисел в третью степень.

# Напишите программу, которая возводит в третью степень каждое число от 1 до N и выводит результат на экран.

# Пример
# Введите число: 3
# 1 ** 3 = 1
# 2 ** 3 = 8
# 3 ** 3 = 27

to_qube = int(input('Введите число: '))
counter = 1

while counter <= to_qube:
    result = counter ** 3
    print(f'{counter} ** 3 = {result}')
    counter += 1


print('Задача 2. Коллекторы')

# Напишите робота для коллекторов.
# В самом начале он спрашивает имя должника и сумму долга,
# а затем начинает требовать у него погашения до тех пор, 
# пока он не введёт нужную сумму (равную сумме долга или больше).
# После погашения долга сообщите об этом пользователю и поблагодарите его.
 
# Пример:
# Василий, ваша задолженность составляет 100 рублей.
# Сколько рублей вы внесёте прямо сейчас, чтобы её погасить? 50
 
# Маловато, Василий. Давайте ещё раз.
# Сколько рублей вы внесёте прямо сейчас, чтобы её погасить? 90
# Маловато, Василий. Давайте ещё раз.
 
# Сколько рублей вы внесёте прямо сейчас, чтобы её погасить? 110
# Отлично, Василий! Вы погасили долг. Спасибо!

debt_name = input('Введите имя должника: ')
debt_num = int(input('Введите сумму долга: '))
money_to_debt = int(input('Введите сумму, которую вы готовы внести: '))

print(debt_name, 'Ваша задолженность составляет', debt_num)
print("Сколько рублей вы внесёте прямо сейчас, чтобы её погасить?", money_to_debt)

while money_to_debt < debt_num:
    print('Маловато,', debt_name, 'Давайте ещё раз.')
    money_to_debt = int(input('Введите сумму, которую вы готовы внести: '))

print('Отлично, ' + debt_name + '!' + ' Вы погасили долг. Спасибо!')


print('Задача 3. Слишком большие числа')

# У неудачливого бухгалтера всё опять идёт наперекосяк: ему приносят такие большие счета, что числа не помещаются на бумаге. 

# Напишите программу, которая считала бы для него, сколько цифр во вводимом числе. Обратите внимание, что число 0 имеет одну цифру.

# Пример:
# Введите число: 567
# Ответ: 3

# Введите число: 1203
# Ответ: 4

number = int(input('Введите число: '))
number = abs(number)

if number == 0:
    num_of_digits = 1
else:
    num_of_digits = 0
    while number > 0:
        number //= 10  
        num_of_digits += 1  

print('Ответ:', num_of_digits)

print('Задача 4. Поставьте оценку!')

# Вася выложил своё новое приложение на платформу для начинающих разработчиков,
# на ней пользователи могут ставить оценку приложению от −100 до 100.
# Ему захотелось сравнить количество положительных и отрицательных отзывов,
# для этого он заранее отфильтровал все отзывы так,
# чтобы в конце были те, которые равны нулю.
 
# Напишите программу,
# которая находит количество положительных
# и количество отрицательных чисел в последовательности.
# Последовательность заканчивается на числе 0.
 
# Пример:
# Введите число: −4
# Введите число: −90
# Введите число: 6
# Введите число: 0
# Кол-во положительных чисел: 1
# Кол-во отрицательных чисел: 2

positive_count = 0
negative_count = 0

while True:
    enter_num = int(input('Введите число: '))

  
    if enter_num == 0:
        break

    
    if enter_num > 0:
        positive_count += 1
    elif enter_num < 0:
        negative_count += 1


print('Кол-во положительных чисел:', positive_count)
print('Кол-во отрицательных чисел:', negative_count)


print('Задача 5. Обычный день на работе')

# Максим программирует целый день на работе и вечером идёт домой.
# Каждый час начальство кидает ему несколько задач,
# которые нужно решить до следующего рабочего часа.
# И вдобавок каждый час Максиму звонит супруга.
# Он знает, что если он возьмёт трубку, то жена попросит зайти вечером в магазин.

# Напишите программу,
# в которой считается, сколько задач выполнил Максим за день (8 часов).
# Если он хоть раз взял трубку,
# то в конце дополнительно выводите сообщение: «Нужно зайти в магазин».

# Пример:
# Начался 8-часовой рабочий день
# 1 час
# Сколько задач решит Максим? 1
# Звонит жена. Взять трубку? (1-да, 0-нет) 0

# 2 час
# Сколько задач решит Максим? 2
# Звонит жена. Взять трубку? (1-да, 0-нет) 0

# 3 час
# Сколько задач решит Максим? 3
# Звонит жена. Взять трубку? (1-да, 0-нет) 0

# 4 час
# Сколько задач решит Максим? 4
# Звонит жена. Взять трубку? (1-да, 0-нет) 1

# 5 час
# Сколько задач решит Максим? 5
# Звонит жена. Взять трубку? (1-да, 0-нет) 0

# 6 час
# Сколько задач решит Максим? 1
# Звонит жена. Взять трубку? (1-да, 0-нет) 0

# 7 час
# Сколько задач решит Максим? 2
# Звонит жена. Взять трубку? (1-да, 0-нет) 1

# 8 час
# Сколько задач решит Максим? 3
# Звонит жена. Взять трубку? (1-да, 0-нет) 0

# Рабочий день закончился. Всего выполнено задач: 21
# Нужно зайти в магазин


print('Начался 8-часовой рабочий день')

task_counter = 0
took_call = False  
hour = 1
while hour <= 8:
    print(f'{hour} час')

    tasks = int(input('Сколько задач решит Максим? '))
    task_counter += tasks

    wife_call = int(input('Жена звонит, взять трубку? (1 - да, 0 - нет) '))

    if wife_call == 1:
        took_call = True

    hour += 1  


print('Рабочий день закончился. Всего выполнено задач:', task_counter)

if took_call:
    print('Нужно зайти в магазин')

print('Задача 6. Вклады')

# Вклад в банке составляет X рублей.
# Ежегодно он увеличивается на P процентов,
# после чего дробная часть копеек отбрасывается.

# Определите, через сколько лет вклад составит не менее Y рублей.

# Напишите программу,
# которая по данным числам X, Y, P определяет,
# сколько лет пройдёт, прежде чем сумма достигнет значения Y.

X = int(input('Введите сумму вклада: '))
Y = int(input('Введите целевую сумму: '))
P = int(input('Введите процент увеличения в год: '))


current_amount = X
years = 0


while current_amount < Y:
 current_amount += (current_amount * P) // 100
 years += 1

print(f'Через {years} лет вклад составит не менее {Y} рублей.')


print('Задача 7. Игра «Угадай число»')

# В одной из практических работ мы делали задачу, где папа-программист написал для сына программу, которая просит его угадать число. Недостаток программы был в том, что бедному сыну приходилось её каждый раз перезапускать, чтобы угадывать число. Теперь, когда мы знаем гораздо больше, пришло время исправить этот недостаток и заодно немного улучшить саму игру.

# Напишите программу-игру, которая запрашивает у пользователя число до тех пор, пока он его не отгадает. Выводите сообщения в соответствии с примером.

# Пример (загадали число 7)
# Введите число: 3
# Число меньше, чем нужно. Попробуйте ещё раз!
# Введите число: 10
# Число больше, чем нужно. Попробуйте ещё раз!
# Введите число: 8
# Число больше, чем нужно. Попробуйте ещё раз!
# Введите число: 7
# Вы угадали! Число попыток: 4

num = 7
attempts = 0

while True:
    guess_num = int(input('Угадайте число: '))
    attempts += 1 

    if guess_num < num:
        print('Число меньше, чем нужно. Попробуйте ещё раз!')
    elif guess_num > num:
        print('Число больше, чем нужно. Попробуйте ещё раз!')
    else:
        print(f'Вы угадали! Число попыток: {attempts}')
    break  



print('Задача 8. Игра «Компьютер угадывает число»')

# Поменяйте мальчика и компьютер из прошлой задачи местами.
# Теперь мальчик загадывает число между 1 и 100 (включительно).
# Компьютер может спросить у мальчика:
# «Твое число равно, меньше или больше, чем число N?»,
# где N — число, которое хочет проверить компьютер.
# Мальчик отвечает одним из трёх чисел:
# 1 — равно,
# 2 — больше,
# 3 — меньше.
 
# Напишите программу, 
# которая с помощью цепочки таких вопросов и ответов мальчика угадывает число.
 
# Дополнительно: сделайте так, чтобы можно было гарантированно угадать число за семь попыток.

# Подсказка: При желании найдите описание алгоритма бинарного поиска и попробуйте применить в этой задаче.
#Разбор подобного решения будет в следующем модуле.


low = 1
high = 100

attempts = 0

while True:
    guess = (low + high) // 2
    attempts += 1


    print(f'Твое число равно, меньше или больше, чем число {guess}?')
    print('1 — равно, 2 — больше, 3 — меньше')

    response = int(input('Ваш ответ: '))

    if response == 1:
        print(f'Я угадал! Твое число {guess}. Количество попыток: {attempts}')
        break
    elif response == 2:
        low = guess + 1  
    elif response == 3:
        high = guess - 1  
    else:
        print('Неверный ввод, попробуй еще раз.')
